{"version":3,"sources":["assets/logo.svg","components/main/AppHeader.tsx","model/Point2D.ts","components/Canvas.tsx","components/InputCoefficient.tsx","model/utils.ts","components/InputStep.tsx","components/InputNbPoints.tsx","components/InputCanvasSize.tsx","components/main/MultiBloom.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["TXT","modalClose","modalTitle","modalOk","modalCancel","modalText","AppHeader","useState","show","setShow","handleClose","itemHome","Navbar","Brand","className","itemLogo","Nav","Link","style","margin","padding","href","target","rel","src","logo","height","alt","modal","Modal","onHide","animation","Header","closeButton","closeLabel","Title","Body","Footer","Button","variant","onClick","itemCredits","bg","expand","TWO_PI","Math","PI","Point2DMaker","values","n","r","map","val","arg","Point2D","sin","cos","coefficient","result","i","ai","bi","push","start","end","x","y","lambda","this","centerX","centerY","max","round","toCanvasPoint2D","p","radius","cX","cY","scale","toCanvasXY","Canvas","props","canvasRef","useRef","paint","context","current","getContext","canvas","width","floor","rad","lines","createCircleChords","nbPoints","l","toCanvasLine2D","clearRect","beginPath","strokeStyle","arc","stroke","forEach","line","moveTo","lineTo","useEffect","canvasSize","paddingTop","ref","InputCoefficient","InputGroup","Prepend","Text","Form","Control","disabled","placeholder","type","step","MIN_COEFF","value","onChange","e","valueAsNumber","toInt","o","parseInt","String","toFloat","parseFloat","InputStep","MIN_STEP","InputNbPoints","InputCanvasSize","as","opt","MultiBloom","isRunning","setIsRunning","refCoefficient","refIsRunning","setCoefficient","setNbPoints","setStep","setCanvasSize","tick","requestAnimationFrame","coefficientChangeHandler","btnVariant","btnText","newCoefficient","toFixed","num","isNaN","Container","fluid","Row","Col","newStep","newNbPoints","a","b","newCanvasSize","size","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3088ca6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from \"react\";\r\nimport {Navbar, Nav, Modal, Button} from \"react-bootstrap\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nconst TXT = {\r\n    modalClose: \"Close\",\r\n    modalTitle: \"Credits for the original idea\",\r\n    modalOk: \"Check it out on Youtube\",\r\n    modalCancel: \"Maybe later...\",\r\n    modalText: \"This application is fully inspired by a Youtube video that I\" +\r\n        \" stumbled upon in 2021. The video itself is very well made and really\" +\r\n        \" well explained (it's in French). \" +\r\n        \" The idea is actually a lot simpler than it looks, and that's why\" +\r\n        \" these figures are so amazing. Basically these are only\" +\r\n        \" graphical representations of our good old multiplication\" +\r\n        \" tables. If you wish to learn more about these, I strongly encourage \" +\r\n        \" you to check it out if you are at all interested.\",\r\n};\r\n\r\nexport const AppHeader = () =>\r\n{\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const itemHome = (\r\n        <Navbar.Brand className=\"header-app-item\">\r\n            Multi(×)Bloom\r\n        </Navbar.Brand>);\r\n\r\n    const itemLogo = (\r\n        <Navbar.Brand className=\"header-app-item\">\r\n            <Nav.Link\r\n                style={{margin: '0', padding: '0'}}\r\n                href=\"https://reactjs.org/\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\">\r\n                <img src={logo}\r\n                     className=\"App-logo\"\r\n                     height={36}\r\n                     alt=\"logo\"/>\r\n                Powered by ReactJS\r\n            </Nav.Link>\r\n        </Navbar.Brand>);\r\n\r\n    const modal = (\r\n        <Modal show={show}\r\n               onHide={handleClose}\r\n               animation={false}>\r\n            <Modal.Header closeButton closeLabel={TXT.modalClose}>\r\n                <Modal.Title>{TXT.modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{TXT.modalText}</p>\r\n                <p><small>This webapp was developped by Damien Aholou (that's me :) )</small></p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={handleClose}>\r\n                    {TXT.modalCancel}\r\n                </Button>\r\n                <a href={\"https://www.youtube.com/watch?v=-X49VQgi86E&ab_channel=Micka%C3%ABlLaunay\"}\r\n                   target=\"_blank\"\r\n                   rel=\"noreferrer\"\r\n                   className=\"btn btn-outline-success\">\r\n                    {TXT.modalOk}\r\n                </a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n\r\n    const itemCredits = (\r\n        <Navbar.Brand className=\"header-app-item\">\r\n            <Button onClick={handleShow} variant={\"outline-info\"}>\r\n                Inspired by...\r\n            </Button>\r\n            {modal}\r\n        </Navbar.Brand>);\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\"\r\n                className=\"justify-content-between fixed-top header-app\"\r\n                expand=\"sm\">\r\n            {itemHome}\r\n            {itemCredits}\r\n            {itemLogo}\r\n        </Navbar>\r\n    );\r\n}\r\n","export const TWO_PI = Math.PI * 2;\r\n\r\n\r\nexport class Point2DMaker\r\n{\r\n    static createOnCircle(values: number[], n: number)\r\n        : Point2D[]\r\n    {\r\n        const r = TWO_PI / n;\r\n\r\n        return values.map(val =>\r\n        {\r\n            const arg = r * val;\r\n            return new Point2D(\r\n                Math.sin(arg),\r\n                Math.cos(arg)\r\n            );\r\n        });\r\n    }\r\n\r\n    static createCircleChords(coefficient: number, n: number) : Line2D[]\r\n    {\r\n        const r = TWO_PI / n;\r\n        const result: Line2D[] = [];\r\n\r\n        for(let i=0.5; i<n; i++)\r\n        {\r\n            const ai = i;\r\n            const bi = (i * coefficient) % n;\r\n            result.push({\r\n                start: new Point2D(Math.sin(r*ai), Math.cos(r*ai)),\r\n                end: new Point2D(Math.sin(r*bi), Math.cos(r*bi)),\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class Point2D\r\n{\r\n    constructor(public x: number,\r\n                public y: number)\r\n    {\r\n    }\r\n\r\n    scale(lambda: number): Point2D\r\n    {\r\n        return new Point2D(lambda * this.x, lambda * this.y);\r\n    }\r\n\r\n    toCanvasXY(centerX: number, centerY: number): Point2D\r\n    {\r\n        const newX = Math.max(0, Math.round(centerX + this.x));\r\n        const newY = Math.max(0, Math.round(centerY - this.y));\r\n        return new Point2D(newX, newY);\r\n    }\r\n}\r\n\r\nexport interface Line2D\r\n{\r\n    start: Point2D;\r\n    end: Point2D;\r\n}\r\n\r\nexport function toCanvasPoint2D(p: Point2D, radius: number,\r\n                                cX: number, cY: number): Point2D\r\n{\r\n    return p.scale(radius).toCanvasXY(cX, cY);\r\n}\r\n\r\nexport function toCanvasLine2D(l: Line2D, radius: number,\r\n                               cX: number, cY: number): Line2D\r\n{\r\n    return {\r\n        start: toCanvasPoint2D(l.start, radius, cX, cY),\r\n        end: toCanvasPoint2D(l.end, radius, cX, cY),\r\n    };\r\n}\r\n","import {useEffect, useRef} from \"react\";\r\nimport {Point2DMaker, toCanvasLine2D, TWO_PI} from \"../model/Point2D\";\r\n\r\ninterface Props\r\n{\r\n    coefficient: number;\r\n    nbPoints: number;\r\n    canvasSize: number;\r\n}\r\n\r\nexport const Canvas = (props: Props) =>\r\n{\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n\r\n    const paint = () =>\r\n    {\r\n        const context = canvasRef.current?.getContext('2d');\r\n        if (context)\r\n        {\r\n            const {width, height} = context.canvas;\r\n            const cX = Math.floor(width/2);\r\n            const cY = Math.floor(height/2);\r\n            const rad = cX-3;\r\n\r\n            const initLines = Point2DMaker.createCircleChords(\r\n                props.coefficient,\r\n                props.nbPoints);\r\n            const lines = initLines.map(l =>\r\n                toCanvasLine2D(l, rad, cX, cY));\r\n\r\n            // Reset current transformation matrix to the identity matrix\r\n            // context.setTransform(1, 0, 0, 1, 0, 0);\r\n            // context.translate(0.5, 0.5);\r\n\r\n            context.clearRect(0, 0, width, height);\r\n\r\n            //context.save();\r\n            context.beginPath();\r\n            context.strokeStyle = '#000';\r\n            context.arc(cX, cY, rad, 0, TWO_PI);\r\n            context.stroke();\r\n\r\n            context.beginPath();\r\n            // context.strokeStyle = '#F00';\r\n            lines.forEach(line =>\r\n            {\r\n                context.moveTo(line.start.x, line.start.y);\r\n                context.lineTo(line.end.x, line.end.y);\r\n            });\r\n            context.stroke();\r\n            //context.restore();\r\n        }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        paint();\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <canvas\r\n                width={props.canvasSize+1}\r\n                height={props.canvasSize+1}\r\n                style={{\r\n                    paddingTop: 10,\r\n                    //border: 'solid red 1px'\r\n                    // display: 'block',\r\n\r\n                    // width: `${CANVAS_SIZE}px`,\r\n                    // height: `${CANVAS_SIZE}px`\r\n                }}\r\n                ref={canvasRef}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import {Form, InputGroup} from \"react-bootstrap\"\r\nimport {MIN_COEFF} from \"./main/MultiBloom\";\r\n\r\ninterface Props\r\n{\r\n    disabled: boolean;\r\n    coefficient: number;\r\n    onChange: (coefficient: number) => void;\r\n}\r\n\r\nexport const InputCoefficient = (props: Props) =>\r\n{\r\n    const onChangeHandler = (e: any) =>\r\n    {\r\n        props.onChange(e.target.valueAsNumber);\r\n    }\r\n\r\n    return (\r\n        <InputGroup className=\"item-menu\">\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                    Coefficient\r\n                </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n                disabled={props.disabled}\r\n                placeholder=\"Coefficient\"\r\n                type=\"number\"\r\n                step={MIN_COEFF}\r\n                value={props.coefficient}\r\n                onChange={onChangeHandler}>\r\n            </Form.Control>\r\n        </InputGroup>\r\n    );\r\n}\r\n","export const toInt = (o: any): number =>\r\n{\r\n    return parseInt(String(o));\r\n}\r\n\r\nexport const toFloat = (o: any): number =>\r\n{\r\n    return parseFloat(String(o));\r\n}\r\n\r\nexport function clamp(a: number, x: number, b: number)\r\n{\r\n    return x < a ? a : x > b ? b : x;\r\n}\r\n","import {Form, InputGroup} from \"react-bootstrap\"\r\nimport {MIN_STEP} from \"./main/MultiBloom\";\r\n\r\ninterface Props\r\n{\r\n    disabled: boolean;\r\n    step: number;\r\n    onChange: (step: number) => void;\r\n}\r\n\r\nexport const InputStep = (props: Props) =>\r\n{\r\n    const onChangeHandler = (e: any) =>\r\n    {\r\n        props.onChange(e.target.valueAsNumber);\r\n    }\r\n\r\n    return (\r\n        <InputGroup className=\"item-menu\">\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                    Step\r\n                </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n                disabled={props.disabled}\r\n                placeholder=\"Step\"\r\n                type=\"number\"\r\n                step={MIN_STEP}\r\n                value={props.step}\r\n                onChange={onChangeHandler}>\r\n            </Form.Control>\r\n        </InputGroup>\r\n    );\r\n}\r\n","import {Form, InputGroup} from \"react-bootstrap\"\r\n\r\ninterface Props\r\n{\r\n    disabled: boolean;\r\n    nbPoints: number;\r\n    onChange: (nbPoints: number) => void;\r\n}\r\n\r\nexport const InputNbPoints = (props: Props) =>\r\n{\r\n    const onChangeHandler = (e: any) =>\r\n    {\r\n        props.onChange(e.target.valueAsNumber);\r\n    }\r\n\r\n    return (\r\n        <InputGroup className=\"item-menu\">\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                    Modulo\r\n                </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n                disabled={props.disabled}\r\n                placeholder=\"Number of points\"\r\n                type=\"number\"\r\n                step={1}\r\n                value={props.nbPoints}\r\n                onChange={onChangeHandler}>\r\n            </Form.Control>\r\n        </InputGroup>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Form, InputGroup} from \"react-bootstrap\";\r\nimport {toInt} from \"../model/utils\";\r\n\r\ninterface Props\r\n{\r\n    canvasSize: number;\r\n    onChange: (canvasSize: number) => void;\r\n}\r\n\r\nexport function InputCanvasSize(props: Props)\r\n{\r\n    const onChangeHandler = (e: any) =>\r\n    {\r\n        props.onChange(toInt(e.target.value));\r\n    }\r\n\r\n    const options = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\r\n\r\n    return (\r\n        <InputGroup className=\"item-menu\">\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                    Canvas size\r\n                </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n                as=\"select\"\r\n                placeholder=\"Number of points\"\r\n                value={props.canvasSize}\r\n                onChange={onChangeHandler}>\r\n                {options.map(opt =>\r\n                    <option key={opt} value={opt}>{opt} px</option>\r\n                )}\r\n            </Form.Control>\r\n        </InputGroup>\r\n    );\r\n}\r\n","import React, {useRef, useState} from \"react\";\r\nimport {Button, Container, Row, Col} from \"react-bootstrap\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {InputCoefficient} from \"../InputCoefficient\";\r\nimport {clamp, toFloat, toInt} from \"../../model/utils\";\r\nimport {InputStep} from \"../InputStep\";\r\nimport {InputNbPoints} from \"../InputNbPoints\";\r\nimport {InputCanvasSize} from \"../InputCanvasSize\";\r\n\r\nexport const MIN_COEFF = 0;\r\nexport const MIN_STEP = 0.001;\r\nexport const AVG_STEP = 0.005;\r\nexport const MIN_NB_POINTS = 1;\r\nexport const AVG_NB_POINTS = 666;\r\nexport const MAX_NB_POINTS = 10000;\r\n\r\nconst TXT = {\r\n  btnStart: \"▶ Start\",\r\n  btnStop: \"⏸️ Stop\",\r\n  btnReset: \"Reset\",\r\n};\r\n\r\nexport const MultiBloom = () =>\r\n{\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const refCoefficient = useRef(0);\r\n    const refIsRunning = useRef(false);\r\n\r\n    const [coefficient, setCoefficient] = useState(MIN_COEFF);\r\n    const [nbPoints, setNbPoints] = useState(AVG_NB_POINTS);\r\n    const [step, setStep] = useState(AVG_STEP);\r\n    const [canvasSize, setCanvasSize] = useState(700);\r\n\r\n    const tick = () =>\r\n    {\r\n        //console.log(`ticking.... ${refCoef.current}`);\r\n        if(refIsRunning.current)\r\n        {\r\n            requestAnimationFrame(tick);\r\n            refCoefficient.current += step;\r\n            coefficientChangeHandler(refCoefficient.current);\r\n        }\r\n    };\r\n\r\n    const onClickHandler = () =>\r\n    {\r\n        refIsRunning.current = !refIsRunning.current;\r\n        setIsRunning(refIsRunning.current);\r\n        if(refIsRunning.current)\r\n        {\r\n            requestAnimationFrame(tick);\r\n        }\r\n    };\r\n\r\n    const onResetHandler = () =>\r\n    {\r\n        console.log('reset')\r\n        refIsRunning.current = false;\r\n        setIsRunning(false);\r\n        setStep(AVG_STEP);\r\n        setNbPoints(AVG_NB_POINTS);\r\n    };\r\n\r\n    const btnVariant = isRunning ? 'outline-danger' : 'outline-success';\r\n    const btnText = isRunning ? TXT.btnStop : TXT.btnStart;\r\n\r\n    const coefficientChangeHandler = (newCoefficient: number) =>\r\n    {\r\n        const val = toFloat(newCoefficient.toFixed(4));\r\n        const num = isNaN(val) ? MIN_COEFF : Math.max(val, MIN_COEFF);\r\n        refCoefficient.current = num;\r\n        setCoefficient(num);\r\n        //console.log(num);\r\n    }\r\n\r\n    const stepChangeHandler = (newStep: number) =>\r\n    {\r\n        const val = toFloat(newStep.toFixed(4));\r\n        const num = isNaN(val) ? MIN_STEP : val;\r\n        setStep(num);\r\n        //console.log(num);\r\n    }\r\n\r\n    const nbPointsChangeHandler = (newNbPoints: number) =>\r\n    {\r\n        const val = toInt(newNbPoints);\r\n        const num = isNaN(val)\r\n            ? MIN_NB_POINTS\r\n            : clamp(MIN_NB_POINTS, val, MAX_NB_POINTS);\r\n        setNbPoints(num);\r\n        //console.log(num);\r\n    }\r\n\r\n    const canvasSizeChangeHandler = (newCanvasSize: number) =>\r\n    {\r\n        setCanvasSize(newCanvasSize);\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"container-app\">\r\n\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"left-menu\">\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <InputCoefficient\r\n                            disabled={isRunning}\r\n                            coefficient={coefficient}\r\n                            onChange={coefficientChangeHandler}/>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <InputStep\r\n                            disabled={isRunning}\r\n                            step={step}\r\n                            onChange={stepChangeHandler}/>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <InputNbPoints\r\n                            disabled={isRunning}\r\n                            nbPoints={nbPoints}\r\n                            onChange={nbPointsChangeHandler}/>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <InputCanvasSize canvasSize={canvasSize}\r\n                                         onChange={canvasSizeChangeHandler}/>\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <Button className=\"item-menu\"\r\n                                size={\"lg\"}\r\n                                variant={btnVariant}\r\n                                onClick={onClickHandler}>\r\n                            {btnText}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <Button className=\"item-menu\"\r\n                                size={\"lg\"}\r\n                                variant={'outline-secondary'}\r\n                                onClick={onResetHandler}>\r\n                            {TXT.btnReset}\r\n                        </Button>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Canvas coefficient={coefficient}\r\n                            nbPoints={nbPoints}\r\n                            canvasSize={canvasSize}/>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../assets/base.css';\nimport {AppHeader} from \"./main/AppHeader\";\nimport {MultiBloom} from \"./main/MultiBloom\";\n\nfunction App()\n{\n    return (\n        <div className=\"App\">\n            <AppHeader/>\n            <MultiBloom/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}